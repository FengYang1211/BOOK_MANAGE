<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">


    <!--配置数据库相关参数-->
	<context:property-placeholder location="classpath:db.properties"/>

    <!--数据库连接池-->
	<!--mysql-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
    </bean>
<!--	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--		<property name="maxTotal" value="${jdbc.maxActive}"/>-->
<!--		<property name="minIdle" value="${jdbc.minIdle}"/>-->
<!--	</bean>-->
<!--	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">-->
<!--		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>-->
<!--		<constructor-arg name="host" value="localhost"/>-->
<!--	</bean>-->
<!--	<bean id="jedis" class="redis.clients.jedis.Jedis">-->
<!--		<property name="dataSource" ref="jedisPool"/>-->
<!--	</bean>-->
	<!-- Mybatis的工厂 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
<!--		&lt;!&ndash; 核心配置文件的位置 &ndash;&gt;-->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"/>
		<!--扫描entity包,使用别名,多个用;隔开-->
		<property name="typeAliasesPackage" value="com.bookManagerment.entity"/>
<!--		&lt;!&ndash;扫描sql配置文件:mapper需要的xml文件&ndash;&gt;-->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!-- 使用通用Mapper插件的方式：配置集成了通用Mapper接口的扫描器 -->
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bookManagerment.mapper"/><!-- 扫描集成了Mapper<T>的接口 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
	</bean>

	<!-- 注解事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 开启注解 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>